/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.musicapp;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author PC
 */
public class MainUI extends javax.swing.JFrame {

    private ArrayList<Song> songs;

    public MainUI() {
        songs = new ArrayList<>();
        loadFile();
        initComponents();
        setLocationRelativeTo(null);
        fillTable(songs);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        title = new javax.swing.JLabel();
        homeTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        songList = new javax.swing.JTable();
        songSearch = new javax.swing.JPanel();
        songSearchButton = new javax.swing.JButton();
        songField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        songPlayB = new javax.swing.JButton();
        addSongB = new javax.swing.JButton();
        deleteSongB = new javax.swing.JButton();
        menu = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        myFaButton = new javax.swing.JButton();
        instrumentmusicBotton = new javax.swing.JButton();
        lyricBotton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.selectedForeground"));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("My Music");
        title.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        getContentPane().add(title, gridBagConstraints);

        homeTab.setLayout(new java.awt.GridBagLayout());

        songList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title", "Author", "Genre", "Year"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(songList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 10);
        homeTab.add(jScrollPane2, gridBagConstraints);

        songSearch.setLayout(new java.awt.GridBagLayout());

        songSearchButton.setText("Search");
        songSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songSearchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        songSearch.add(songSearchButton, gridBagConstraints);

        songField.setPreferredSize(new java.awt.Dimension(250, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 15);
        songSearch.add(songField, gridBagConstraints);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        songSearch.add(jButton1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        homeTab.add(songSearch, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        songPlayB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        songPlayB.setText("Play");
        songPlayB.setToolTipText("");
        songPlayB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songPlayBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 20, 10);
        jPanel1.add(songPlayB, gridBagConstraints);

        addSongB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addSongB.setText("Add Song");
        addSongB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 20, 10);
        jPanel1.add(addSongB, gridBagConstraints);

        deleteSongB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteSongB.setText("Delete ");
        deleteSongB.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 20, 10);
        jPanel1.add(deleteSongB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        homeTab.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 5;
        getContentPane().add(homeTab, gridBagConstraints);

        menu.setLayout(new java.awt.GridBagLayout());

        homeButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        homeButton.setText("Home");
        homeButton.setPreferredSize(new java.awt.Dimension(150, 50));
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 14);
        menu.add(homeButton, gridBagConstraints);

        myFaButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        myFaButton.setText("My Favorite");
        myFaButton.setPreferredSize(new java.awt.Dimension(150, 50));
        myFaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myFaButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 14);
        menu.add(myFaButton, gridBagConstraints);

        instrumentmusicBotton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        instrumentmusicBotton.setText("Instrument Music");
        instrumentmusicBotton.setPreferredSize(new java.awt.Dimension(150, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 14);
        menu.add(instrumentmusicBotton, gridBagConstraints);

        lyricBotton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lyricBotton.setText("lyric Music");
        lyricBotton.setPreferredSize(new java.awt.Dimension(150, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 14);
        menu.add(lyricBotton, gridBagConstraints);

        aboutButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        aboutButton.setText("About");
        aboutButton.setPreferredSize(new java.awt.Dimension(150, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 14);
        menu.add(aboutButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(menu, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_homeButtonActionPerformed

    private void myFaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myFaButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_myFaButtonActionPerformed

    private void songSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songSearchButtonActionPerformed
        //ndthfttuf
    }//GEN-LAST:event_songSearchButtonActionPerformed

    private void addSongBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongBActionPerformed
        new add(songs).setVisible(true);
    }//GEN-LAST:event_addSongBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fillTable(songs);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void songPlayBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songPlayBActionPerformed
       if (songList.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a song to play", "Message", 1);
        } else {
            Song song = songs.get(songList.getSelectedRow());
            MusicPlayerFrame player = new MusicPlayerFrame(song);
            player.setVisible(true);
            player.setLocationRelativeTo(this);

        }
    }//GEN-LAST:event_songPlayBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JButton addSongB;
    private javax.swing.JButton deleteSongB;
    private javax.swing.JButton homeButton;
    private javax.swing.JPanel homeTab;
    private javax.swing.JButton instrumentmusicBotton;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lyricBotton;
    private javax.swing.JPanel menu;
    private javax.swing.JButton myFaButton;
    private javax.swing.JTextField songField;
    private javax.swing.JTable songList;
    private javax.swing.JButton songPlayB;
    private javax.swing.JPanel songSearch;
    private javax.swing.JButton songSearchButton;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private void loadFile() {
        String fileName = "List.data";
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName))) {
            this.songs = (ArrayList<Song>) ois.readObject();
            ois.close();
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error load file: " + ex.getMessage(), "Message", 1);
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error load file: " + ex.getMessage(), "Message", 1);
        }
    }

    private void saveToFile() {
        String fileName = "List.data";
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName))) {
            oos.writeObject(songList);
            oos.close();

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error save file: " + ex.getMessage(), "Message", 1);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error save file: " + ex.getMessage(), "Message", 1);

        }
    }

    private void fillTable(ArrayList<Song> list) {
        DefaultTableModel model = (DefaultTableModel) songList.getModel();
        int rowCount = songList.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        for (Song song : list) {
            Object[] row = new Object[]{song.getTitle(), song.getAuthor(), song.getGenre(), song.getYear()};
            model.addRow(row);
        }
    }

}
